-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-12-19 22:34:00 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE clienti (
    id_client   NUMBER(5) NOT NULL,
    nume_client VARCHAR2(30) NOT NULL,
    adresa      VARCHAR2(30) NOT NULL,
    email       VARCHAR2(30),
    telefon     VARCHAR2(10) NOT NULL
)
LOGGING;

ALTER TABLE clienti ADD constraint clienti_email_ck

CHECK ( REGEXP_LIKE ( email,'[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) ) ;



ALTER TABLE clienti ADD CONSTRAINT clienti_pk PRIMARY KEY ( id_client );

ALTER TABLE clienti ADD CONSTRAINT telefon_ck UNIQUE ( telefon );

CREATE TABLE comenzi (
    id_comanda   NUMBER(5) NOT NULL,
    data_comanda DATE NOT NULL,
    total_plata  NUMBER(10) NOT NULL,
    id_client    NUMBER(5)
)
LOGGING;

ALTER TABLE comenzi ADD CONSTRAINT comenzi_pk PRIMARY KEY ( id_comanda );

CREATE TABLE detalii_comanda (
    produse_id_produs  NUMBER(5) NOT NULL,
    comenzi_id_comanda NUMBER(5) NOT NULL,
    cantitate          NUMBER
)
LOGGING;

ALTER TABLE detalii_comanda ADD CONSTRAINT detalii_comanda_pk PRIMARY KEY ( produse_id_produs,
                                                                            comenzi_id_comanda );

CREATE TABLE istoric_pret (
    id_pret        NUMBER(5) NOT NULL,
    pret_vechi     NUMBER(10) NOT NULL,
    pret_nou       NUMBER(10) NOT NULL,
    data_schimbare DATE NOT NULL,
    id_produs      NUMBER(5)
)
LOGGING;

ALTER TABLE istoric_pret ADD CONSTRAINT istoric_pret_pk PRIMARY KEY ( id_pret );

CREATE TABLE produse (
    id_produs       NUMBER(5) NOT NULL,
    nume_produs     VARCHAR2(30) NOT NULL,
    descriere       VARCHAR2(30),
    pret            NUMBER(10) NOT NULL,
    stoc_disponibil NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE produse ADD CONSTRAINT produse_pk PRIMARY KEY ( id_produs );

CREATE TABLE recenzii (
    id_recenzie NUMBER(5) NOT NULL,
    comentariu  VARCHAR2(50) NOT NULL,
    id_client   NUMBER(5),
    id_produs   NUMBER(5)
)
LOGGING;

ALTER TABLE recenzii ADD CONSTRAINT recenzii_pk PRIMARY KEY ( id_recenzie );

ALTER TABLE recenzii
    ADD CONSTRAINT client_recenzii_fk FOREIGN KEY ( id_client )
        REFERENCES clienti ( id_client )
    NOT DEFERRABLE;

ALTER TABLE comenzi
    ADD CONSTRAINT "CLIENT-CAMANDA-FK" FOREIGN KEY ( id_client )
        REFERENCES clienti ( id_client )
    NOT DEFERRABLE;

ALTER TABLE detalii_comanda
    ADD CONSTRAINT detalii_comanda_comenzi_fk FOREIGN KEY ( comenzi_id_comanda )
        REFERENCES comenzi ( id_comanda )
    NOT DEFERRABLE;

ALTER TABLE detalii_comanda
    ADD CONSTRAINT detalii_comanda_produse_fk FOREIGN KEY ( produse_id_produs )
        REFERENCES produse ( id_produs )
    NOT DEFERRABLE;

ALTER TABLE istoric_pret
    ADD CONSTRAINT produse_istoric_fk FOREIGN KEY ( id_produs )
        REFERENCES produse ( id_produs )
    NOT DEFERRABLE;

ALTER TABLE recenzii
    ADD CONSTRAINT produse_recenzii_fk FOREIGN KEY ( id_produs )
        REFERENCES produse ( id_produs )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER istoric_pret_data_trg 
    BEFORE INSERT OR UPDATE ON istoric_pret 
    FOR EACH ROW 
BEGIN
	IF( :new.data_schimbare > SYSDATE )
		THEN
			RAISE_APPLICATION_ERROR( -20002,
			'Data invalida.Trebuie sa fie mai mIca decat data curenta.');
	END IF;
END; 
/

CREATE SEQUENCE clienti_id_client_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER clienti_id_client_trg BEFORE
    INSERT ON clienti
    FOR EACH ROW
    WHEN ( new.id_client IS NULL )
BEGIN
    :new.id_client := clienti_id_client_seq.nextval;
END;
/

CREATE SEQUENCE comenzi_id_comanda_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER comenzi_id_comanda_trg BEFORE
    INSERT ON comenzi
    FOR EACH ROW
    WHEN ( new.id_comanda IS NULL )
BEGIN
    :new.id_comanda := comenzi_id_comanda_seq.nextval;
END;
/

CREATE SEQUENCE istoric_pret_id_pret_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER istoric_pret_id_pret_trg BEFORE
    INSERT ON istoric_pret
    FOR EACH ROW
    WHEN ( new.id_pret IS NULL )
BEGIN
    :new.id_pret := istoric_pret_id_pret_seq.nextval;
END;
/

CREATE SEQUENCE produse_id_produs_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER produse_id_produs_trg BEFORE
    INSERT ON produse
    FOR EACH ROW
    WHEN ( new.id_produs IS NULL )
BEGIN
    :new.id_produs := produse_id_produs_seq.nextval;
END;
/

CREATE SEQUENCE recenzii_id_recenzie_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER recenzii_id_recenzie_trg BEFORE
    INSERT ON recenzii
    FOR EACH ROW
    WHEN ( new.id_recenzie IS NULL )
BEGIN
    :new.id_recenzie := recenzii_id_recenzie_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             0
-- ALTER TABLE                             14
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0